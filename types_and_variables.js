// ТИПЫ, ЗНАЧЕНИЯ И ПЕРЕМЕННЫЕ

/* Типы в JS подразделяются на 2 категории:

* Элементарные:
    -   Числа
    -   Строки
    -   Булевы значения
    -   null
    -   undefined
    -   Символ

* Объектные
    - Любое значение, отличное от перечисленных выше
        (Базовые: Object и массив,
        Другие: Функции, Классы, Set, Map, Date, Error, RegExp и т.д.)

*/

// ЧИСЛА

//Объект Math предлагает более сложные математические операции

a = Math.pow(2,53); // Возведение в степень
console.log(`2 в степени 53 = ${a}`);

a = Math.round(0.60); // Округление до ближайшего целого
console.log(`Округляем 0.60 при помощи Math.round = ${a}`);

a = Math.ceil(0.60); // Округление в большую сторону
console.log(`Округляем 0.60 при помощи Math.ceil = ${a}`);

a = Math.floor(0.60); // Округление в меньшую сторону
console.log(`Округляем 0.60 при помощи Math.floor = ${a}`);

a = Math.abs(-6); // Абсолютная величина
console.log(`Находим абсолютную величину от значения (-6) = ${a}`);

a = Math.max(1,2,3); // Возвращает наибольший из аргументов
console.log(`Наибольший из аргументов Math.max(1,2,3) = ${a}`);

a = Math.min(1,2,3); // Возвращает наименьший из аргументов
console.log(`Наименьший из аргументов Math.min(1,2,3) = ${a}`);

a = Math.random(); // Возвращает псевдослучайное число X, где 0 <= X <= 1.0
console.log(`Псевдослучайное число = ${a}`);

console.log(`Число пи = ${Math.PI}`);

console.log(`Основание натурального логарифма = ${Math.E}`);

console.log(`Квадратный корень из 16 = ${Math.sqrt(16)}`);

console.log(`Синус 30 градусов = ${Math.sin(30)}`);

console.log(`Натуральный логарифм 10 = ${Math.log(10)}`);
console.log(`Десятичный логарифм 100 = ${Math.log(100)/Math.LN10}`);
console.log(`Двоичный логарифм 512 = ${Math.log(512)/Math.LN2}`);
console.log(`Десятичный логарифм 100, \
через Math.log10(100) = ${Math.log10(100)}`);
console.log(`Двоичный логарифм 512, через Math.log2(512) = ${Math.log2(512)}`);

// Двоичное представление чисел с плавающей точкой ведет к ошибкам округления
// эта проблема характерна для любого языка программирования, где используется двоичное представление чисел с плавающей точкой
let x = 0.3 - 0.2;
let y = 0.2 - 0.1;
console.log(`Равны ли x и y? = ${x===y}`);

// Если аппроксимации проблемны в приложении - можно использовать, например, масштабированные целые числа
// Например, вы можете манипулировать денежными величинами как целочис­ленными центами, а не дробными долларами.

//В ES2020 появился новый тип - BigInt (для представления 64-битных целых чисел)
let someBigInt = 1234n;

// Класс DATE

let timestamp = Date.now(); // Текущее время как отметка времени
let now = new Date(); // Текущее время как объект Date
let ms = now.getTime(); // Милисекундная отметка времени
let iso = now.toISOString(); // Строка времени со стандартным форматом ISO

let startRate = 1.1145;
let rateGrowsPerMonth = [
    100.4,100.4,100.5,100.3,100.2,100.4,100.5,100.8,101.0,100.4,100.3,100.3,
    100.3,100.2,99.8,99.8,100.1,100.3,100.4,100.4,100.3,100.6,100.8,100.3,
    100.2,100.4,99.93,100.43,100.71,100.83,100.67,100.78
];
console.log(
    rateGrowsPerMonth
    .reduce((previousMonthRate,nextMonthRate) =>
        (previousMonthRate/100)*nextMonthRate,startRate
    )
);
